---
import { getCollection } from 'astro:content';
import Layout from '@layouts/Layout.astro';
import { Icon } from 'astro-icon/components';
import { siteConfig } from '@config/site';

// Get all blog posts
const posts = await getCollection('posts', ({ data }) => {
  return !data.draft;
});

// Get all unique tags and count posts for each
const tags = [...new Set(posts.flatMap(post => post.data.tags || []))];
const tagCounts = tags.map(tag => {
  const count = posts.filter(post => 
    post.data.tags && post.data.tags.includes(tag)
  ).length;
  
  return {
    name: tag,
    count,
    slug: tag.toLowerCase()
  };
}).sort((a, b) => b.count - a.count); // Sort by post count (descending)
---

<Layout 
  title={`Tags - ${siteConfig.title}`}
  description="Browse all tags and topics on our blog"
>
  <div class="w-full py-8 opacity-0 translate-y-4 animate-fade-up">
    <header ease-in-out transition-[opacity] transition:persist class="mb-10">
      <h1 class="text-3xl md:text-4xl font-bold text-gray-900 dark:text-white mb-4">
        #Hashtag
      </h1>
      <p class="text-lg text-gray-700 dark:text-gray-300">
Telusuri menurut topik      </p>
    </header>
    
    <div class="flex flex-wrap gap-3">
      {tagCounts.map(({ name, count, slug }) => (
        <a 
          href={`/tags/${slug}/`}
          class="flex items-center gap-2 px-4 py-2 bg-white dark:bg-gray-800 rounded-full shadow-sm hover:shadow-md transition-shadow border border-gray-200 dark:border-gray-700"
        >
          <span class="font-medium text-gray-900 dark:text-white">
            #{name.charAt(0).toUpperCase() + name.slice(1)}
          </span>
          <span class="bg-blue-100 dark:bg-blue-900 text-blue-800 dark:text-blue-200 text-xs font-medium px-2.5 py-0.5 rounded-full">
            {count}
          </span>
        </a>
      ))}
    </div>
    
    {tagCounts.length === 0 && (
      <div class="text-center py-12">
        <p class="text-gray-600 dark:text-gray-400">No tags found.</p>
      </div>
    )}
  </div>
</Layout>
