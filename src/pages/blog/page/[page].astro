---
import { getCollection } from 'astro:content';
import Layout from '@layouts/Layout.astro';
import PostCard from '@components/blog/PostCard.astro';
import Pagination from '@components/common/Pagination.astro';
import { getPagination } from '@utils/pagination';
import { siteConfig } from '@config/site';

export async function getStaticPaths() {
  const posts = await getCollection('posts', ({ data }) => {
    return !data.draft;
  });
  
  // Sort posts by date (newest first)
  const sortedPosts = posts.sort((a, b) => {
    return new Date(b.data.date || 0).getTime() - new Date(a.data.date || 0).getTime();
  });
  
  // Calculate total pages
  const totalPages = Math.ceil(sortedPosts.length / siteConfig.postsPerPage);
  
  // Generate paths for each page
  return Array.from({ length: totalPages }).map((_, i) => {
    const page = i + 1;
    // Skip page 1 as it's handled by the index.astro
    if (page === 1) return null;
    
    return {
      params: { page: page.toString() },
      props: { 
        posts: sortedPosts,
        page,
        totalPosts: sortedPosts.length
      }
    };
  }).filter(Boolean); // Remove null entries
}

const { posts, page, totalPosts } = Astro.props;
const currentPage = parseInt(page);
const basePath = '/blog';

// Get pagination data
const { startIndex, endIndex, prevUrl, nextUrl, totalPages } = getPagination({ 
  page: currentPage, 
  totalPosts, 
  basePath 
});

// Get posts for the current page
const paginatedPosts = posts.slice(startIndex, endIndex);
---

<Layout 
  title={`Blog - Halaman ${currentPage} - ${siteConfig.title}`}
  description={`Ide, catatan, dan cerita - Halaman ${currentPage}`}
  noindex={true}
>
  <main class="w-full opacity-0 translate-y-4 animate-fade-up">
    <header ease-in-out transition-[opacity] transition:persist class="mb-10">
      <h1 class="text-3xl md:text-4xl font-bold text-gray-900 dark:text-white mb-4">Blog</h1>
      <p class="text-lg text-gray-700 dark:text-gray-300">
        Page {currentPage} of {totalPages} - Eksploarsi ide, catatan, dan cerita terbaru dari kami.
      </p>
    </header>
    
    <div class="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-8">
      {paginatedPosts.map((post) => (
        <PostCard post={post} />
      ))}
    </div>
    
    <Pagination
      currentPage={currentPage}
      totalPages={totalPages}
      prevUrl={prevUrl}
      nextUrl={nextUrl}
      basePath={basePath}
    />
  </main>
</Layout>
