---
import type { MarkdownHeading } from "astro";
import type { Heading } from "./TOCHeading.astro";
import TOCHeading from "./TOCHeading.astro";

interface Props {
  headings: MarkdownHeading[];
}

function buildToc(headings: MarkdownHeading[]): Heading[] {
  const toc: Heading[] = [];
  const parentHeadings = new Map();

  headings
    .filter((h) => h.depth <= 3)
    .forEach((h) => {
      const heading = { ...h, subheadings: [] };
      parentHeadings.set(heading.depth, heading);

      if (heading.depth === 2) {
        toc.push(heading);
      } else {
        parentHeadings.get(heading.depth - 1)?.subheadings.push(heading);
      }
    });

  return toc;
}

const { headings } = Astro.props;
const tableOfContents = buildToc(headings);
---

<!-- [OPTIMASI] Menggunakan elemen <details> yang semantik dan performan -->
<div id="toc-wrapper" class="relative w-full">
  <!-- Placeholder hanya untuk header saat sticky -->
  <div id="toc-placeholder" class="hidden"></div>
  
  <!-- Kontainer utama sekarang adalah elemen <details> -->
  <details id="toc-details" class="toc-container group" open>
    <!-- Header TOC sekarang adalah <summary>, yang secara native dapat diklik -->
    <summary id="toc-summary" class="toc-header-bar list-none cursor-pointer bg-white dark:bg-gray-800 rounded-lg p-4 shadow-md border border-gray-100 dark:border-gray-700">
      <!-- Wrapper baru untuk konten agar penataannya benar -->
      <div class="toc-summary-content-wrapper flex items-center justify-between">
        <h2 class="text-lg font-bold text-gray-800 dark:text-gray-200 select-none">Table of Contents</h2>
        <div class="text-gray-500 hover:text-blue-600 dark:text-gray-300 dark:hover:text-blue-400">
          <svg xmlns="http://www.w3.org/2000/svg" class="h-5 w-5 pointer-events-none transition-transform duration-300 group-open:rotate-180" viewBox="0 0 20 20" fill="currentColor">
            <path fill-rule="evenodd" d="M5.293 7.293a1 1 0 011.414 0L10 10.586l3.293-3.293a1 1 0 111.414 1.414l-4 4a1 1 0 01-1.414 0l-4-4a1 1 0 010-1.414z" clip-rule="evenodd" />
          </svg>
        </div>
      </div>
    </summary>

    <!-- Konten TOC, sekarang menjadi panel dropdown dari <details> -->
    <div id="toc-content" class="toc-content-panel bg-white dark:bg-gray-800 rounded-lg shadow-md border border-gray-100 dark:border-gray-700 mt-2">
      <div class="p-4 pr-2">
        <ul class="text-sm space-y-2 list-none">
          {
            tableOfContents.map((heading) => (
              <TOCHeading heading={heading} />
            ))
          }
        </ul>
      </div>
    </div>
  </details>
</div>

<script>
  function initializeTOC() {
    if (document.body.classList.contains('toc-initialized')) return;
    document.body.classList.add('toc-initialized');
    
    // [PERBAIKAN TYPESCRIPT] Menambahkan type casting yang benar
    const tocDetails = document.getElementById('toc-details') as HTMLDetailsElement | null;
    const tocSummary = document.getElementById('toc-summary') as HTMLElement | null;
    const tocContent = document.getElementById('toc-content') as HTMLElement | null;
    const tocWrapper = document.getElementById('toc-wrapper') as HTMLElement | null;
    const tocPlaceholder = document.getElementById('toc-placeholder') as HTMLElement | null;
    const headerElement = document.querySelector('body > header') as HTMLElement | null;

    // Menambahkan null check untuk semua elemen
    if (!tocDetails || !tocSummary || !tocContent || !tocWrapper || !tocPlaceholder) {
      console.error("Elemen TOC yang dibutuhkan tidak ditemukan.");
      return;
    }
    
    tocSummary.addEventListener('click', (event) => {
      event.preventDefault();
      tocDetails.open = !tocDetails.open;
    });

    tocContent.addEventListener('click', (event) => {
      // [PERBAIKAN TYPESCRIPT] Menambahkan type guard untuk event.target
      if (event.target && (event.target as Element).closest('a')) {
        tocDetails.open = false;
      }
    });

    const headerHeight = headerElement ? headerElement.offsetHeight : 80;
    document.documentElement.style.setProperty('--header-height', `${headerHeight}px`);

    const makeSticky = () => {
        if (tocSummary.classList.contains('is-sticky')) return;
        tocPlaceholder.style.height = `${tocSummary.offsetHeight}px`;
        tocPlaceholder.style.display = 'block';
        tocSummary.classList.add('is-sticky');
        tocContent.classList.add('is-sticky-content');
        tocDetails.open = false; // Otomatis tutup saat sticky
    };

    const makeUnSticky = () => {
        if (!tocSummary.classList.contains('is-sticky')) return;
        tocSummary.classList.remove('is-sticky');
        tocContent.classList.remove('is-sticky-content');
        tocDetails.open = true; // Otomatis buka saat kembali
        tocPlaceholder.style.display = 'none';
    };
    
    const observer = new IntersectionObserver(([entry]) => {
      const isStickyNow = tocSummary.classList.contains('is-sticky');
      const topIsScrolledPastHeader = entry.boundingClientRect.top <= headerHeight;

      if (entry.intersectionRatio === 1) {
          if (isStickyNow) makeUnSticky();
          return;
      }
      if (topIsScrolledPastHeader) {
          if (!isStickyNow) makeSticky();
      } else {
          if (isStickyNow) makeUnSticky();
      }
    }, {
      threshold: [0, 1.0],
    });

    observer.observe(tocWrapper);
  }

  document.addEventListener('astro:page-load', initializeTOC);
  initializeTOC();
</script>

<style>
  html {
    scroll-padding-top: 150px;
    scroll-behavior: smooth;
  }

  /* Sembunyikan panah default dari <summary> */
  #toc-summary::-webkit-details-marker {
    display: none;
  }

  /* Gaya dasar */
  .toc-header-bar { transition: all 0.3s ease-in-out; }
  .toc-content-panel { 
    transition: all 0.3s ease-in-out;
    overflow-y: auto;
    max-height: calc(100vh - 200px);
  }

  /* Sembunyikan konten saat <details> tidak terbuka */
  #toc-details:not([open]) > #toc-content {
    display: none;
  }
  
  /* -- Gaya saat STICKY -- */
  
  /* Gaya untuk <summary> saat menjadi sticky bar */
  #toc-summary.is-sticky {
    position: fixed;
    top: var(--header-height, 80px);
    left: 0;
    width: 100%;
    z-index: 40;
    background-color: rgba(255, 255, 255, 0.7);
    backdrop-filter: blur(16px);
    -webkit-backdrop-filter: blur(16px);
    /* [PERBAIKAN] Hanya terapkan border-top */
    border: none;
    border-top: 1px solid #e5e7eb; /* Light mode border */
    border-radius: 0;
    box-shadow: none;
    height: 3rem;
    padding: 0;
  }
  
  html.dark #toc-summary.is-sticky {
    background-color: rgba(3, 6, 32, 0.7);
    border-top-color: #374151; /* Dark mode border */
  }

  /* Atur wrapper konten di dalam header sticky */
  #toc-summary.is-sticky .toc-summary-content-wrapper {
    max-width: 80rem;
    margin: 0 auto;
    width: 100%;
    height: 100%;
    padding: 0 1rem;
  }

   @media (min-width: 640px) { #toc-summary.is-sticky .toc-summary-content-wrapper { padding: 0 1.5rem; } }
   @media (min-width: 1024px) { #toc-summary.is-sticky .toc-summary-content-wrapper { padding: 0 2rem; } }

  /* Gaya untuk panel konten saat sticky (menjadi dropdown) */
  #toc-content.is-sticky-content {
    position: fixed;
    top: calc(var(--header-height, 80px) + 3rem);
    left: 0;
    width: 100%;
    z-index: 39;
    border-radius: 0;
    margin-top: 0;
    border-top: none;
    box-shadow: 0 8px 16px rgba(0,0,0,0.1);
    /* [PERUBAHAN] Menyesuaikan background dengan header */
    background-color: rgba(255, 255, 255, 0.7);
    backdrop-filter: blur(16px);
    -webkit-backdrop-filter: blur(16px);
  }
  html.dark #toc-content.is-sticky-content {
    /* [PERUBAHAN] Menyesuaikan background dengan header */
    background-color: rgba(3, 6, 32, 0.7);
    box-shadow: 0 8px 16px rgba(0,0,0,0.3);
  }

  /* Logika Buka/Tutup saat Sticky (menggunakan [open]) */
  #toc-details[open] > #toc-summary.is-sticky ~ #toc-content.is-sticky-content {
    transform: translateY(0);
    opacity: 1;
    visibility: visible;
  }
   #toc-details:not([open]) > #toc-summary.is-sticky ~ #toc-content.is-sticky-content {
    transform: translateY(-20px);
    opacity: 0;
    visibility: hidden;
  }
  
  /* Gaya link di dalam TOC */
  #toc-content ul > li > ul {
    margin-top: 0.5rem;
  }
  #toc-content ul > li > ul > li {
    padding-left: 1.25rem;
  }
</style>
