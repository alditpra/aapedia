---
import type { MarkdownHeading } from "astro";
import type { Heading } from "./TOCHeading.astro";
import TOCHeading from "./TOCHeading.astro";

interface Props {
  headings: MarkdownHeading[];
}

function buildToc(headings: MarkdownHeading[]): Heading[] {
  const toc: Heading[] = [];
  const parentHeadings = new Map();

  headings
    .filter((h) => h.depth <= 3)
    .forEach((h) => {
      const heading = { ...h, subheadings: [] };
      parentHeadings.set(heading.depth, heading);

      if (heading.depth === 2) {
        toc.push(heading);
      } else {
        parentHeadings.get(heading.depth - 1)?.subheadings.push(heading);
      }
    });

  return toc;
}

const { headings } = Astro.props;
const tableOfContents = buildToc(headings);
---

<!-- [PERUBAHAN] Struktur HTML baru untuk memisahkan header dan konten -->
<div id="toc-wrapper" class="relative w-full">
  <!-- Placeholder hanya untuk header saat sticky -->
  <div id="toc-placeholder" class="hidden"></div>
  
  <div id="toc-container" class="relative">
    <!-- Header TOC, bagian ini yang akan menjadi sticky -->
    <div id="toc-header" class="toc-header-bar bg-white dark:bg-gray-800 rounded-lg shadow-md border border-gray-100 dark:border-gray-700 cursor-pointer">
      <!-- [BARU] Wrapper untuk konten agar bisa diatur posisinya dengan benar -->
      <div class="toc-header-content-wrapper flex justify-between items-center p-4">
        <h2 class="text-lg font-bold text-gray-800 dark:text-gray-200 select-none">Table of Contents</h2>
        <button id="toc-toggle" aria-label="Toggle table of contents" aria-expanded="true" class="text-gray-500 hover:text-blue-600 dark:text-gray-300 dark:hover:text-blue-400 p-1 rounded-md focus:outline-none focus:ring-2 focus:ring-blue-500">
          <svg xmlns="http://www.w3.org/2000/svg" class="h-5 w-5 pointer-events-none transition-transform duration-300" viewBox="0 0 20 20" fill="currentColor">
            <path fill-rule="evenodd" d="M5.293 7.293a1 1 0 011.414 0L10 10.586l3.293-3.293a1 1 0 111.414 1.414l-4 4a1 1 0 01-1.414 0l-4-4a1 1 0 010-1.414z" clip-rule="evenodd" />
          </svg>
        </button>
      </div>
    </div>

    <!-- Konten TOC, bagian ini adalah dropdown -->
    <div id="toc-content" class="toc-content-panel bg-white dark:bg-gray-800 rounded-lg shadow-md border border-gray-100 dark:border-gray-700 mt-2">
      <div class="p-4 pr-2">
        <ul class="text-sm space-y-2 list-none">
          {
            tableOfContents.map((heading) => (
              <TOCHeading heading={heading} />
            ))
          }
        </ul>
      </div>
    </div>
  </div>
</div>

<script>
  function initializeTOC() {
    if (document.body.classList.contains('toc-initialized')) return;
    document.body.classList.add('toc-initialized');
    
    const tocHeader = document.getElementById('toc-header');
    const tocToggle = document.getElementById('toc-toggle');
    const tocContent = document.getElementById('toc-content');
    const tocWrapper = document.getElementById('toc-wrapper');
    const tocPlaceholder = document.getElementById('toc-placeholder');
    const headerElement = document.querySelector('body > header');

    if (!tocWrapper || !tocHeader || !tocContent || !tocToggle || !tocPlaceholder) {
      console.error("Elemen TOC yang dibutuhkan tidak ditemukan.");
      return;
    }

    const headerHeight = headerElement ? headerElement.offsetHeight : 80;
    document.documentElement.style.setProperty('--header-height', `${headerHeight}px`);

    const updateTocState = (isSticky) => {
      tocHeader.addEventListener('click', () => {
        const isCollapsed = tocContent.classList.toggle('is-collapsed');
        tocToggle.setAttribute('aria-expanded', String(!isCollapsed));
      });

      tocContent.addEventListener('click', (event) => {
        if (event.target.closest('a')) {
          tocContent.classList.add('is-collapsed');
          tocToggle.setAttribute('aria-expanded', 'false');
        }
      });
    };

    const makeSticky = () => {
        if (tocHeader.classList.contains('is-sticky')) return;
        tocPlaceholder.style.height = `${tocHeader.offsetHeight}px`;
        tocPlaceholder.style.display = 'block';
        tocHeader.classList.add('is-sticky');
        tocContent.classList.add('is-sticky-content');
        tocContent.classList.add('is-collapsed');
        tocToggle.setAttribute('aria-expanded', 'false');
    };

    const makeUnSticky = () => {
        if (!tocHeader.classList.contains('is-sticky')) return;
        tocHeader.classList.remove('is-sticky');
        tocContent.classList.remove('is-sticky-content');
        tocContent.classList.remove('is-collapsed');
        tocToggle.setAttribute('aria-expanded', 'true');
        tocPlaceholder.style.display = 'none';
    };
    
    const observer = new IntersectionObserver(([entry]) => {
      const isStickyNow = tocHeader.classList.contains('is-sticky');
      const topIsScrolledPastHeader = entry.boundingClientRect.top <= headerHeight;

      if (entry.intersectionRatio === 1) {
          if (isStickyNow) makeUnSticky();
          return;
      }
      if (topIsScrolledPastHeader) {
          if (!isStickyNow) makeSticky();
      } else {
          if (isStickyNow) makeUnSticky();
      }
    }, {
      threshold: [0, 1.0],
    });

    observer.observe(tocWrapper);
    updateTocState();
  }

  document.addEventListener('astro:page-load', initializeTOC);
  initializeTOC();
</script>

<style>
  html {
    scroll-padding-top: 150px; /* Cukupkan ruang untuk header + sticky TOC */
    scroll-behavior: smooth;
  }

  /* Gaya dasar untuk header dan panel konten */
  .toc-header-bar { transition: all 0.3s ease-in-out; }
  .toc-content-panel { 
    transition: transform 0.3s ease-in-out, opacity 0.3s ease-in-out, visibility 0.3s;
    overflow-y: auto;
    max-height: calc(100vh - 200px); /* Batasi tinggi dropdown */
  }

  /* Gaya scrollbar untuk panel konten */
  .toc-content-panel::-webkit-scrollbar { width: 6px; }
  .toc-content-panel::-webkit-scrollbar-track { background: transparent; }
  .toc-content-panel::-webkit-scrollbar-thumb { background-color: rgba(156, 163, 175, 0.5); border-radius: 20px; }
  .dark .toc-content-panel::-webkit-scrollbar-thumb { background-color: rgba(209, 213, 219, 0.5); }

  /* Logika Buka/Tutup (Default) */
  #toc-content.is-collapsed { display: none; }
  #toc-toggle[aria-expanded="false"] svg { transform: rotate(-90deg); }

  /* -- Gaya saat STICKY -- */
  
  /* Gaya untuk header TOC saat menjadi sticky bar */
  #toc-header.is-sticky {
    position: fixed;
    top: var(--header-height, 80px);
    left: 0;
    width: 100%;
    z-index: 40;
    
    /* Tampilan meniru header utama */
    background-color: rgba(255, 255, 255, 0.7);
    backdrop-filter: blur(16px);
    -webkit-backdrop-filter: blur(16px);
    border-bottom: 1px solid #e5e7eb;
    
    /* Reset gaya asli */
    border-radius: 0;
    box-shadow: none;
    height: 3rem; /* h-12 */
    padding: 0; /* Padding diatur di wrapper di bawah */
  }
  
  html.dark #toc-header.is-sticky {
    background-color: rgba(3, 6, 32, 0.7);
    border-bottom-color: #374151;
  }

  /* Atur wrapper konten di dalam header sticky */
  #toc-header.is-sticky .toc-header-content-wrapper {
      max-width: 80rem;
      margin-left: auto;
      margin-right: auto;
      width: 100%;
      height: 100%;
      padding: 0 1rem; /* Ganti p-4 dengan padding horizontal */
  }
   @media (min-width: 640px) { #toc-header.is-sticky .toc-header-content-wrapper { padding: 0 1.5rem; } }
   @media (min-width: 1024px) { #toc-header.is-sticky .toc-header-content-wrapper { padding: 0 2rem; } }

  /* Gaya untuk panel konten saat sticky (menjadi dropdown) */
  #toc-content.is-sticky-content {
    position: fixed;
    top: calc(var(--header-height, 80px) + 3rem); /* Di bawah sticky TOC header */
    left: 0;
    width: 100%;
    z-index: 39;
    
    /* Reset gaya asli & beri tampilan dropdown */
    border-radius: 0;
    margin-top: 0;
    border-top: none;
    box-shadow: 0 8px 16px rgba(0,0,0,0.1);
    background-color: white;
  }
  html.dark #toc-content.is-sticky-content {
    background-color: #030620; /* Warna solid gelap */
    box-shadow: 0 8px 16px rgba(0,0,0,0.3);
  }

  /* Logika Buka/Tutup saat Sticky */
  #toc-content.is-sticky-content.is-collapsed {
    transform: translateY(-20px);
    opacity: 0;
    visibility: hidden;
  }
   #toc-content.is-sticky-content:not(.is-collapsed) {
    transform: translateY(0);
    opacity: 1;
    visibility: visible;
  }

  /* Gaya link di dalam TOC */
  #toc-content ul li a {
    display: flex;
    align-items: baseline;
  }
  
  /* [PERBAIKAN] Selektor yang lebih spesifik untuk indentasi sub-heading */
  #toc-content ul > li > ul {
    margin-top: 0.5rem; /* Beri sedikit ruang dari parent */
  }

  #toc-content ul > li > ul > li {
    padding-left: 1rem; /* Atur indentasi di sini */
  }

  #toc-content ul li a::after {
    content: "";
    flex-grow: 1;
    border-bottom: 1px dotted #d1d5db;
    margin-left: 0.5rem;
    align-self: flex-end;
    margin-bottom: 0.25rem;
  }
  .dark #toc-content ul li a::after {
    border-color: #4b5563;
  }

</style>
