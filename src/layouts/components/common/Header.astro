---
// src/components/common/Header.astro
import ThemeToggle from "./ThemeToggle.astro";
import menu from "@config/menu.json";

const mainMenu = menu.main;
const isHome = Astro.url.pathname === "/";

const navLinkClasses = "text-gray-600 hover:text-blue-600 dark:text-gray-300 dark:hover:text-blue-400 px-3 py-2 rounded-md text-sm font-medium transition-colors";
const mobileNavLinkClasses = "block px-3 py-2 rounded-md text-base font-medium text-gray-500 hover:text-blue-600 dark:text-gray-400 dark:hover:text-blue-400";
---

<header
  id="main-header"
  transition:persist
  class="sticky top-0 z-50 w-full bg-white/70 backdrop-blur-md transition-all dark:bg-[#030620b3]"
>
  <div class="mx-auto w-full max-w-7xl px-4 sm:px-6 lg:px-8">
    <div class="flex h-16 items-center justify-between">
      <a href="/" class="flex items-center">
        <span class="whitespace-nowrap bg-gradient-to-r from-blue-500 to-indigo-500 bg-clip-text text-2xl font-bold text-transparent">
          AApedia.com
        </span>
      </a>
      <nav class="hidden items-center space-x-4 md:flex">
        {mainMenu.map((item) => (
          item.hasChildren && item.children ? (
            <div class="group relative">
              <button class:list={[navLinkClasses, "flex items-center gap-1"]} aria-haspopup="true" aria-expanded="false">
                {item.name}
                <svg class="h-4 w-4 transition-transform duration-300 group-hover:rotate-180" xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 24 24" stroke="currentColor">
                  <path d="M19 9l-7 7-7-7" stroke-linecap="round" stroke-linejoin="round" stroke-width="2" />
                </svg>
              </button>
              <div class="invisible absolute left-0 z-10 mt-2 w-48 origin-top-left rounded-xl border border-gray-100 bg-white shadow-lg opacity-0 transition-all duration-300 group-hover:visible group-hover:opacity-100 dark:border-gray-700 dark:bg-gray-800">
                <div class="py-2">
                  {item.children.map((child) => (
                    <a href={child.url} class="block px-4 py-2 text-sm text-gray-600 transition-colors hover:bg-gray-100 hover:text-blue-600 dark:text-gray-300 dark:hover:bg-gray-700 dark:hover:text-blue-400">
                      {child.name}
                    </a>
                  ))}
                </div>
              </div>
            </div>
          ) : (
            <a href={item.url} class={navLinkClasses}>
              {item.name}
            </a>
          )
        ))}
        {!isHome && (
          <a href="/search/" aria-label="Search" class="rounded-md p-2 text-gray-600 transition-colors hover:text-blue-600 dark:text-gray-300 dark:hover:text-blue-400">
            <svg class="h-5 w-5" xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 24 24" stroke="currentColor">
              <path d="M21 21l-6-6m2-5a7 7 0 11-14 0 7 7 0 0114 0z" stroke-linecap="round" stroke-linejoin="round" stroke-width="2"/>
            </svg>
          </a>
        )}
        <ThemeToggle class="theme-toggle-button" />
      </nav>
      <div class="flex md:hidden">
        <button id="menu-toggle" class="rounded-md p-2 text-gray-500 hover:text-gray-900 dark:text-gray-400 dark:hover:text-white" aria-controls="mobile-menu" aria-expanded="false">
          <span class="sr-only">Buka menu</span>
          <svg class="menu-bars block h-6 w-6" xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 24 24" stroke="currentColor">
            <path d="M4 6h16M4 12h16M4 18h16" stroke-linecap="round" stroke-linejoin="round" stroke-width="2" />
          </svg>
          <svg class="menu-close hidden h-6 w-6" xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 24 24" stroke="currentColor">
            <path d="M6 18L18 6M6 6l12 12" stroke-linecap="round" stroke-linejoin="round" stroke-width="2" />
          </svg>
        </button>
      </div>
    </div>
  </div>
  <div id="mobile-menu" class="hidden border-t border-gray-200 bg-white dark:border-gray-700 dark:bg-gray-900 md:hidden">
    <div class="space-y-2 px-4 pb-4 pt-2">
      {mainMenu.map((item) => (
        item.hasChildren && item.children ? (
          <div class="mobile-dropdown">
            <button class="mobile-dropdown-button flex w-full items-center justify-between rounded-md px-3 py-2 text-left text-base font-medium text-gray-500 dark:text-gray-400" aria-expanded="false">
              <span>{item.name}</span>
              <svg class="mobile-dropdown-icon h-4 w-4 shrink-0 transition-transform" xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 24 24" stroke="currentColor">
                <path d="M19 9l-7 7-7-7" stroke-linecap="round" stroke-linejoin="round" stroke-width="2" />
              </svg>
            </button>
            <div class="mobile-dropdown-content hidden space-y-1 pl-4 pt-2">
              {item.children.map((child) => (
                <a href={child.url} class:list={[mobileNavLinkClasses, "hover:bg-gray-100 dark:hover:bg-gray-700"]}>
                  {child.name}
                </a>
              ))}
            </div>
          </div>
        ) : (
          <a href={item.url} class={mobileNavLinkClasses}>
            {item.name}
          </a>
        )
      ))}
      <div class="flex items-center justify-center gap-4 border-t border-gray-200 pt-4 dark:border-gray-700">
        {!isHome && (
          <a href="/search/" class="rounded-md p-2 text-gray-500 hover:text-blue-600 dark:text-gray-400 dark:hover:text-blue-400" aria-label="Search">
            <svg class="h-5 w-5" xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 24 24" stroke="currentColor">
              <path d="M21 21l-6-6m2-5a7 7 0 11-14 0 7 7 0 0114 0z" stroke-linecap="round" stroke-linejoin="round" stroke-width="2" />
            </svg>
          </a>
        )}
        <ThemeToggle class="theme-toggle-button" />
      </div>
    </div>
  </div>
</header>

<script is:inline>
  // Fungsi ini akan dijalankan setiap kali halaman dimuat atau dinavigasi
  function initializeHeaderInteractivity() {
    // === LOGIKA UNTUK TOMBOL TOGGLE MENU MOBILE UTAMA ===
    const menuToggleButton = document.getElementById('menu-toggle');
    const mobileMenu = document.getElementById('mobile-menu');

    // Periksa apakah elemen ada dan belum memiliki listener
    if (menuToggleButton && mobileMenu && !menuToggleButton.dataset.listenerAttached) {
      const menuBarsIcon = menuToggleButton.querySelector('.menu-bars');
      const menuCloseIcon = menuToggleButton.querySelector('.menu-close');

      menuToggleButton.addEventListener('click', () => {
        // Toggle menu utama
        mobileMenu.classList.toggle('hidden');
        
        // Toggle ikon (hamburger/close)
        menuBarsIcon.classList.toggle('hidden');
        menuCloseIcon.classList.toggle('hidden');
        
        // Update atribut ARIA untuk aksesibilitas
        const isExpanded = menuToggleButton.getAttribute('aria-expanded') === 'true';
        menuToggleButton.setAttribute('aria-expanded', String(!isExpanded));
      });

      // Tandai bahwa listener sudah ditambahkan untuk mencegah duplikasi
      menuToggleButton.dataset.listenerAttached = 'true';
    }

    // === LOGIKA UNTUK DROPDOWN DI DALAM MENU MOBILE ===
    const mobileDropdowns = document.querySelectorAll('.mobile-dropdown-button');

    mobileDropdowns.forEach(button => {
      // Periksa apakah elemen belum memiliki listener
      if (!button.dataset.listenerAttached) {
        const content = button.nextElementSibling;
        const icon = button.querySelector('.mobile-dropdown-icon');

        if (content && icon) {
          button.addEventListener('click', () => {
            content.classList.toggle('hidden');
            icon.classList.toggle('rotate-180');
            const isExpanded = button.getAttribute('aria-expanded') === 'true';
            button.setAttribute('aria-expanded', String(!isExpanded));
          });
        }
        
        button.dataset.listenerAttached = 'true';
      }
    });
  }

  // Karena skrip ini inline, kita perlu memastikan event listener 'astro:page-load'
  // tidak ditambahkan berulang kali.
  // Kita bisa mengeceknya dengan sebuah flag di window object.
  if (!window.headerListenersAdded) {
    document.addEventListener('astro:page-load', initializeHeaderInteractivity);
    window.headerListenersAdded = true;
  }
  
  // Jalankan juga saat pertama kali load, untuk halaman yang tidak menggunakan transisi
  initializeHeaderInteractivity();
</script>