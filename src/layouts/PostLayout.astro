---
import { Image } from 'astro:assets';
import { Icon } from 'astro-icon/components';
import Layout from '@layouts/Layout.astro';
import { formatDate } from '@utils/date';
import PostHeadings from '@layouts/components/table-of-contents/PostHeadings.astro';
import RelatedPosts from '@layouts/components/blog/RelatedPosts.astro';
import SocialShare from '@layouts/components/blog/SocialShare.astro';
import SeriesNav from '@layouts/components/widgets/SeriesNav.astro';
import ReadingProgress from '@layouts/components/blog/ReadingProgress.astro';
import Breadcrumb from '@layouts/components/common/Breadcrumb.astro';

const { post, headings } = Astro.props;
const { title, description, image, date, categories, authors, tags } = post.data;

// Get the canonical URL for this post
// Make sure we have a valid site URL to avoid the TypeError: Invalid URL error
const canonicalURL = Astro.site 
  ? new URL(Astro.url.pathname, Astro.site).toString()
  : Astro.url.pathname;

// No reading time calculation needed

// Generate breadcrumbs for structured data
const breadcrumbs = [
  { name: 'Home', url: '/' },
  { name: 'Blog', url: '/blog/' }
];

if (categories && categories.length > 0) {
  breadcrumbs.push({ name: categories[0], url: `/categories/${categories[0].toLowerCase()}/` });
}

breadcrumbs.push({ name: title, url: canonicalURL });
---

<Layout
  title={title}
  description={description}
  image={image?.src || undefined}
  article={true}
  canonical={canonicalURL}
  publishDate={date}
  author={authors && authors.length > 0 ? { name: authors[0] } : undefined}
  tags={tags}
  categories={categories}
  breadcrumbs={breadcrumbs}>
  <!-- Reading Progress Bar -->
<ReadingProgress />

<article class=" w-full py-8" style="transition: opacity 0.3s ease;">
    <!-- Breadcrumb Navigation 
    <Breadcrumb items={breadcrumbs} className="mb-6" /> -->
    
    <!-- Post Header -->
    <header class="mb-8">
      <div class=" flex flex-wrap items-center text-gray-500 dark:text-gray-400 mb-4 gap-4">
        <!-- Date -->
        <div class="flex items-center ">
          <time datetime="Update: "{date?.toISOString()}>
            {date ? formatDate(date) : ''}
          </time>
        </div> 
        

        
        <!-- Categories 
        {categories && categories.length > 0 && (
          <div class="flex items-center">
            <Icon name="mdi:folder" class="w-5 h-5 mr-1" />
            <div class="flex flex-wrap gap-2">
              {categories.map((category: string) => (
                <a 
                  href={`/categories/${category.toLowerCase()}/`} 
                  class="hover:text-blue-600 dark:hover:text-blue-400 transition-colors duration-300"
                >
                  {category}
                </a>
              ))}
            </div>
          </div>
        )} -->
        
        <!-- Author -->
        {authors && authors.length > 0 && (
          <div class="flex items-center">
            <div class="flex flex-wrap gap-2">Author:
              {authors.map((author: string) => (
                <a 
                  href={`/authors/${author.toLowerCase()}/`} 
                  class="hover:text-blue-600 dark:hover:text-blue-400 transition-colors duration-300"
                >
                  {author}
                </a>
              ))}
            </div>
          </div>
        )}
      
      
      <!-- Title -->
      <h1 class=" text-3xl md:text-4xl font-bold text-gray-900 dark:text-white mb-4">
        {title}
      </h1>
      
      <!-- Description -->
      {description && (
        <p class=" text-lg text-gray-700 dark:text-gray-300 mb-6">
          {description}
        </p>
      )}
      
      <!-- Featured Image -->
      {image && (
  <figure class="mb-8 rounded-lg overflow-hidden aspect-video relative">
    <Image
      src={image}
      alt=""
      aria-hidden="true"
      width={900}
      height={600}
      loading="eager"
      fetchpriority="high"
     quality={50} // Penyesuaian kualitas untuk mobile (uji visual)
     formats={['avif', 'webp']}
     sizes="(max-width: 768px) 100vw, 1200px"
      class="absolute inset-0 w-full h-full object-cover"
    />
  </figure>
      )}
      
      <!-- Tags -->
      {tags && tags.length > 0 && (
        <div class="flex flex-wrap gap-2 mb-6">
          {tags.map((tag: string) => (
            <a 
              href={`/tags/${tag.toLowerCase()}/`} 
              class="px-3 py-1 bg-gray-100 dark:bg-gray-800 text-gray-700 dark:text-gray-300 rounded-full text-sm hover:bg-blue-100 dark:hover:bg-blue-900 transition-colors duration-300"
            >
              #{tag}
            </a>
          ))}
        </div>
      )}
    </header>
    
    <!-- Series Navigation (if part of a series) -->
    {post.data.series && Array.isArray(post.data.series) && post.data.series.length === 2 && (
      <SeriesNav 
        currentSlug={post.slug} 
        seriesName={post.data.series[0]} 
        seriesPosition={post.data.series[1]} 
      />
    )}
    
    <!-- Table of Contents -->
    <div class="mb-8 p-4 rounded-lg">
      <PostHeadings headings={headings} />
    </div>
    
    <!-- Post Content -->
    <div class="prose prose-lg dark:prose-invert prose-blue prose-headings:font-bold prose-a:text-blue-600 dark:prose-a:text-blue-400 prose-img:rounded-lg w-full !max-w-none" style="min-height: 200px;">
      <slot />
    </div>
    
    <!-- Social Share Component -->
    <SocialShare
      title={title}
      description={description}
      url={canonicalURL}
    />
    
    <!-- Related Posts -->
    <RelatedPosts currentPost={post} />
  </article>
</Layout>
<script>
document.querySelectorAll("pre").forEach((pre) => {
  const button = document.createElement("button");
  button.innerText = "Copy";
  button.className = "copy-button";

  button.addEventListener("click", () => {
    const code = pre.querySelector("code")?.innerText;
    navigator.clipboard.writeText(code);
    button.innerText = "Sukses dicopy!";
    setTimeout(() => (button.innerText = "Copy"), 2000);
  });

  pre.appendChild(button);
});

</script>
